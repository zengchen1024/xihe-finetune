// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/finetune": {
            "post": {
                "description": "create finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "body of creating finetune",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.FinetuneCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.JobInfoDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/finetune/{id}": {
            "put": {
                "description": "terminate finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "Terminate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of finetune",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete finetune",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of finetune",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        },
        "/v1/finetune/{id}/log": {
            "get": {
                "description": "get log url of finetune for downloading",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Finetune"
                ],
                "summary": "GetLog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of finetune",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/app.LogURLDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "system_error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.JobInfoDTO": {
            "type": "object",
            "properties": {
                "job_id": {
                    "type": "string"
                }
            }
        },
        "app.LogURLDTO": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "controller.FinetuneCreateRequest": {
            "type": "object",
            "properties": {
                "hyperparameter": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "task": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
